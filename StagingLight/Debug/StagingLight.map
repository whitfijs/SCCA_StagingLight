Archive member included because of file (symbol)

/usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm328.o (exit)
/usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
                              ./main.o (__do_copy_data)
/usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
                              ./main.o (__do_clear_bss)

Discarded input sections

 .bss           0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm328.o
 .text          0x0000000000000000        0x0 ./main.o
 .bss           0x0000000000000000        0x0 ./main.o
 .text._Z15detachInterrupth
                0x0000000000000000       0x26 ./main.o
 .text          0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 .bss           0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.mul
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.div
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 .text.libgcc   0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.fixed
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 .text          0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
 .bss           0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.mul
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.div
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc   0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.prologue
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.builtins
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.fmul
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.fixed
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
 .text          0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
 .bss           0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.mul
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.div
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc   0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.prologue
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.builtins
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.fmul
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.fixed
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000020000 xr
data             0x0000000000800060 0x000000000000ffa0 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000400 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
user_signatures  0x0000000000850000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

Address of section .data set to 0x800100
LOAD /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm328.o
LOAD ./main.o
LOAD /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a
LOAD /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libm.a
START GROUP
LOAD /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a
LOAD /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libm.a
LOAD /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a
END GROUP

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000      0x290
 *(.vectors)
 .vectors       0x0000000000000000       0x68 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm328.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x0000000000000068                . = ALIGN (0x2)
                0x0000000000000068                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x0000000000000068        0x0 linker stubs
 *(.trampolines*)
                0x0000000000000068                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x0000000000000068                __ctors_start = .
 *(.ctors)
                0x0000000000000068                __ctors_end = .
                0x0000000000000068                __dtors_start = .
 *(.dtors)
                0x0000000000000068                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x0000000000000068        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm328.o
                0x0000000000000068                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x0000000000000068        0xc /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm328.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x0000000000000074       0x16 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
                0x0000000000000074                __do_copy_data
 .init4         0x000000000000008a       0x10 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
                0x000000000000008a                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x000000000000009a        0x4 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm328.o
 *(.init9)
 *(.text)
 .text          0x000000000000009e        0x2 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm328.o
                0x000000000000009e                __vector_22
                0x000000000000009e                __vector_24
                0x000000000000009e                __bad_interrupt
                0x000000000000009e                __vector_6
                0x000000000000009e                __vector_3
                0x000000000000009e                __vector_23
                0x000000000000009e                __vector_25
                0x000000000000009e                __vector_11
                0x000000000000009e                __vector_13
                0x000000000000009e                __vector_17
                0x000000000000009e                __vector_19
                0x000000000000009e                __vector_7
                0x000000000000009e                __vector_5
                0x000000000000009e                __vector_4
                0x000000000000009e                __vector_9
                0x000000000000009e                __vector_21
                0x000000000000009e                __vector_15
                0x000000000000009e                __vector_8
                0x000000000000009e                __vector_14
                0x000000000000009e                __vector_10
                0x000000000000009e                __vector_16
                0x000000000000009e                __vector_18
                0x000000000000009e                __vector_20
                0x00000000000000a0                . = ALIGN (0x2)
 *(.text.*)
 .text._Z10startTimerj
                0x00000000000000a0       0x24 ./main.o
                0x00000000000000a0                _Z10startTimerj
 .text._Z10resetTimerj
                0x00000000000000c4       0x18 ./main.o
                0x00000000000000c4                _Z10resetTimerj
 .text._Z13detectedPulsev
                0x00000000000000dc       0x14 ./main.o
                0x00000000000000dc                _Z13detectedPulsev
 .text.__vector_12
                0x00000000000000f0       0x56 ./main.o
                0x00000000000000f0                __vector_12
 .text._Z15attachInterrupthPFvvEi
                0x0000000000000146       0x46 ./main.o
                0x0000000000000146                _Z15attachInterrupthPFvvEi
 .text._Z4initv
                0x000000000000018c       0x48 ./main.o
                0x000000000000018c                _Z4initv
 .text.main     0x00000000000001d4        0x4 ./main.o
                0x00000000000001d4                main
 .text.__vector_1
                0x00000000000001d8       0x5a ./main.o
                0x00000000000001d8                __vector_1
 .text.__vector_2
                0x0000000000000232       0x5a ./main.o
                0x0000000000000232                __vector_2
                0x000000000000028c                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x000000000000028c        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
                0x000000000000028c                exit
                0x000000000000028c                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x000000000000028c        0x4 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 *(.fini0)
                0x0000000000000290                _etext = .

.data           0x0000000000800100        0x2 load address 0x0000000000000290
                0x0000000000800100                PROVIDE (__data_start, .)
 *(.data)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm328.o
 .data          0x0000000000800100        0x0 ./main.o
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
 *(.data*)
 .data.countsToWait
                0x0000000000800100        0x2 ./main.o
                0x0000000000800100                countsToWait
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x0000000000800102                . = ALIGN (0x2)
                0x0000000000800102                _edata = .
                0x0000000000800102                PROVIDE (__data_end, .)

.bss            0x0000000000800102        0x5
                0x0000000000800102                PROVIDE (__bss_start, .)
 *(.bss)
 *(.bss*)
 .bss._ZL7intFunc
                0x0000000000800102        0x4 ./main.o
 .bss.car       0x0000000000800106        0x1 ./main.o
                0x0000000000800106                car
 *(COMMON)
                0x0000000000800107                PROVIDE (__bss_end, .)
                0x0000000000000290                __data_load_start = LOADADDR (.data)
                0x0000000000000292                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x0000000000800107        0x0
                0x0000000000800107                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x0000000000800107                PROVIDE (__noinit_end, .)
                0x0000000000800107                _end = .
                0x0000000000800107                PROVIDE (__heap_start, .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.user_signatures
 *(.user_signatures*)

.stab           0x0000000000000000      0xeac
 *(.stab)
 .stab          0x0000000000000000      0x6cc /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm328.o
 .stab          0x00000000000006cc      0x7e0 ./main.o
                                        0x858 (size before relaxing)

.stabstr        0x0000000000000000      0xe65
 *(.stabstr)
 .stabstr       0x0000000000000000      0xe65 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm328.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x11
 *(.comment)
 .comment       0x0000000000000000       0x11 ./main.o
                                         0x12 (size before relaxing)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges
 *(.debug_ranges)

.debug_macro
 *(.debug_macro)
OUTPUT(StagingLight.elf elf32-avr)
LOAD linker stubs

Cross Reference Table

Symbol                                            File
__bad_interrupt                                   /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm328.o
__bss_end                                         /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
__bss_start                                       /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
__data_end                                        /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
__data_load_start                                 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
__data_start                                      /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
__do_clear_bss                                    /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
                                                  ./main.o
__do_copy_data                                    /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
                                                  ./main.o
__heap_end                                        /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm328.o
__init                                            /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm328.o
__stack                                           /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm328.o
__vector_1                                        ./main.o
                                                  /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm328.o
__vector_10                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm328.o
__vector_11                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm328.o
__vector_12                                       ./main.o
                                                  /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm328.o
__vector_13                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm328.o
__vector_14                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm328.o
__vector_15                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm328.o
__vector_16                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm328.o
__vector_17                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm328.o
__vector_18                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm328.o
__vector_19                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm328.o
__vector_2                                        ./main.o
                                                  /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm328.o
__vector_20                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm328.o
__vector_21                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm328.o
__vector_22                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm328.o
__vector_23                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm328.o
__vector_24                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm328.o
__vector_25                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm328.o
__vector_3                                        /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm328.o
__vector_4                                        /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm328.o
__vector_5                                        /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm328.o
__vector_6                                        /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm328.o
__vector_7                                        /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm328.o
__vector_8                                        /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm328.o
__vector_9                                        /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm328.o
__vector_default                                  /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm328.o
__vectors                                         /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm328.o
_exit                                             /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
attachInterrupt(unsigned char, void (*)(), int)   ./main.o
car                                               ./main.o
countsToWait                                      ./main.o
detachInterrupt(unsigned char)                    ./main.o
detectedPulse()                                   ./main.o
exit                                              /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
                                                  /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm328.o
init()                                            ./main.o
main                                              ./main.o
                                                  /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm328.o
resetTimer(unsigned int)                          ./main.o
startTimer(unsigned int)                          ./main.o
